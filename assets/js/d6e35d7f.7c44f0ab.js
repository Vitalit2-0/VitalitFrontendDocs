"use strict";(self.webpackChunkvitalit_frontend_docs=self.webpackChunkvitalit_frontend_docs||[]).push([[7581],{3893:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=r(4848),a=r(8453);const s={title:"Manejo de Errores en el Frontend",sidebar_position:2},t=void 0,i={id:"depuracion/manejo_errores",title:"Manejo de Errores en el Frontend",description:"En el frontend, los errores se manejan verificando el estado del objeto de respuesta antes de procesar cualquier dato. Esto se hace generalmente en los componentes que consumen los servicios:",source:"@site/docs/depuracion/manejo_errores.md",sourceDirName:"depuracion",slug:"/depuracion/manejo_errores",permalink:"/VitalitFrontendDocs/docs/depuracion/manejo_errores",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Manejo de Errores en el Frontend",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Herramientas de Depuraci\xf3n",permalink:"/VitalitFrontendDocs/docs/depuracion/herramientas"},next:{title:"Despliegue"}},c={},d=[{value:"Notificaci\xf3n de Errores",id:"notificaci\xf3n-de-errores",level:2}];function l(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"En el frontend, los errores se manejan verificando el estado del objeto de respuesta antes de procesar cualquier dato. Esto se hace generalmente en los componentes que consumen los servicios:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"async function submitGoal(goalData) {\r\n    const token = getAuthToken(); // Funci\xf3n hipot\xe9tica para obtener el token del usuario\r\n    const response = await RegisterGoal(token, goalData);\r\n\r\n    if (response.code !== \"200\"){\r\n        console.error('Error al registrar meta:', response.string);\r\n        return;\r\n    } \r\n\r\n    // Aqu\xed se ejecuta el c\xf3digo una vez se confirma que la informaci\xf3n\r\n    //lleg\xf3 correctamente\r\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Este enfoque garantiza que los errores se manejen de manera uniforme en toda la aplicaci\xf3n, minimizando la posibilidad de que errores no controlados afecten la experiencia del usuario."}),"\n",(0,o.jsx)(n.h2,{id:"notificaci\xf3n-de-errores",children:"Notificaci\xf3n de Errores"}),"\n",(0,o.jsx)(n.p,{children:"En caso de que un error necesite ser notificado al usuario, se pueden utilizar componentes de UI para mostrar mensajes de error amigables. Estos mensajes informan al usuario sobre lo que ha sucedido y, si es posible, le ofrecen pasos para resolver el problema o reintentar la acci\xf3n."}),"\n",(0,o.jsx)(n.p,{children:"El sistema de manejo de errores de Vitalit asegura que tanto los desarrolladores como los usuarios finales puedan enfrentarse a errores de una manera controlada y predecible, mejorando la estabilidad y la usabilidad de la aplicaci\xf3n."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>i});var o=r(6540);const a={},s=o.createContext(a);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);